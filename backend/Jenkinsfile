pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials')
        DOCKER_IMAGE = "kimdevspace/spring-boot"
        VERSION = "latest"
    }

    stages {
        stage('Prepare Config Files') {
            steps {
                withCredentials([
                    file(credentialsId: 'application-prod-config', variable: 'PROD_CONFIG'),
                    file(credentialsId: 'application-mail-config', variable: 'MAIL_CONFIG'),
                    file(credentialsId: 'application-oauth-config', variable: 'OAUTH_CONFIG')
                ]) {
                    echo 'Copying Secret Config Files...'
                    // 권한 부여 추가
                    sh 'chmod -R 777 backend/src/main/resources'
                    // 파일 복사
                    sh 'cp $PROD_CONFIG backend/src/main/resources/application-prod.yml'
                    sh 'cp $MAIL_CONFIG backend/src/main/resources/application-mail.yml'
                    sh 'cp $OAUTH_CONFIG backend/src/main/resources/application-oauth.yml'
                    sh 'ls -l backend/src/main/resources' // 디렉토리 내 파일 확인
                }
            }
        }

        stage('Gradle Build') {
            steps {
                dir('backend') {
                    sh 'chmod +x gradlew'
                    sh './gradlew clean build'
                }
            }
        }

        stage('Docker Build') {
            steps {
                dir('backend') {
                    sh "docker build -t $DOCKER_IMAGE:$VERSION ."
                }
            }
        }

        stage('Docker Login & Push') {
            steps {
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
                sh "docker push $DOCKER_IMAGE:$VERSION"
            }
        }

        stage('Deploy') {
            steps {
                dir('backend') {
                    sh 'chmod +x deploy.sh'
                    sh './deploy.sh'
                }
            }
        }
    }
}